2021/05/07 15:46:16 replaying WAL of member 1
2021/05/07 15:46:16 loading WAL at term 0 and index 0
2021/05/07 15:46:16 raftexample: wal loaded
raft2021/05/07 15:46:16 INFO: 1 switched to configuration voters=()
raft2021/05/07 15:46:16 INFO: 1 became follower at term 0
raft2021/05/07 15:46:16 INFO: newRaft 1 [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]
raft2021/05/07 15:46:16 INFO: 1 became follower at term 1
raft2021/05/07 15:46:16 INFO: 1 switched to configuration voters=(1)
raft2021/05/07 15:46:16 INFO: 1 switched to configuration voters=(1 2)
raft2021/05/07 15:46:16 INFO: 1 switched to configuration voters=(1 2 3)
2021/05/07 15:46:16 replaying WAL of member 2
raft2021/05/07 15:46:16 INFO: 1 switched to configuration voters=(1 2 3)
raft2021/05/07 15:46:16 INFO: 1 switched to configuration voters=(1 2 3)
raft2021/05/07 15:46:16 INFO: 1 switched to configuration voters=(1 2 3)
2021/05/07 15:46:16 loading WAL at term 0 and index 0
2021/05/07 15:46:16 raftexample: wal loaded
raft2021/05/07 15:46:16 INFO: 2 switched to configuration voters=()
raft2021/05/07 15:46:16 INFO: 2 became follower at term 0
raft2021/05/07 15:46:16 INFO: newRaft 2 [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]
raft2021/05/07 15:46:16 INFO: 2 became follower at term 1
raft2021/05/07 15:46:16 INFO: 2 switched to configuration voters=(1)
raft2021/05/07 15:46:16 INFO: 2 switched to configuration voters=(1 2)
raft2021/05/07 15:46:16 INFO: 2 switched to configuration voters=(1 2 3)
2021/05/07 15:46:16 replaying WAL of member 3
raft2021/05/07 15:46:16 INFO: 2 switched to configuration voters=(1 2 3)
raft2021/05/07 15:46:16 INFO: 2 switched to configuration voters=(1 2 3)
raft2021/05/07 15:46:16 INFO: 2 switched to configuration voters=(1 2 3)
2021/05/07 15:46:17 loading WAL at term 0 and index 0
2021/05/07 15:46:17 raftexample: wal loaded
raft2021/05/07 15:46:17 INFO: 3 switched to configuration voters=()
raft2021/05/07 15:46:17 INFO: 3 became follower at term 0
raft2021/05/07 15:46:17 INFO: newRaft 3 [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]
raft2021/05/07 15:46:17 INFO: 3 became follower at term 1
raft2021/05/07 15:46:17 INFO: 3 switched to configuration voters=(1)
raft2021/05/07 15:46:17 INFO: 3 switched to configuration voters=(1 2)
raft2021/05/07 15:46:17 INFO: 3 switched to configuration voters=(1 2 3)
Ignored event {Type:Send Message:{Type:RequestVoteReq Entries:[]} Sender:1 Recipient:1}
Ignored event {Type:Receive Message:{Type:RequestVoteReq Entries:[]} Sender:1 Recipient:1}
Ignored event {Type:Send Message:{Type:RequestVoteRes Entries:[]} Sender:1 Recipient:1}
Ignored event {Type:Receive Message:{Type:RequestVoteRes Entries:[]} Sender:1 Recipient:1}
Ignored event {Type:Send Message:{Type:RequestVoteReq Entries:[]} Sender:2 Recipient:2}
Ignored event {Type:Receive Message:{Type:RequestVoteReq Entries:[]} Sender:2 Recipient:2}
Ignored event {Type:Send Message:{Type:RequestVoteRes Entries:[]} Sender:2 Recipient:2}
Ignored event {Type:Receive Message:{Type:RequestVoteRes Entries:[]} Sender:2 Recipient:2}
----{Type:Timeout Message:{Type:RequestVoteReq Entries:[]} Sender:0 Recipient:1}
debug state: { atLeastOneLeader: true, logs: { 1: [], 2: [], 3: [] } }
raft2021/05/07 15:46:17 INFO: 1 is starting a new election at term 1
raft2021/05/07 15:46:17 INFO: 1 became candidate at term 2
raft2021/05/07 15:46:17 INFO: 1 received MsgVoteResp from 1 at term 2
raft2021/05/07 15:46:17 INFO: 1 [logterm: 1, index: 3] sent MsgVote request to 2 at term 2
raft2021/05/07 15:46:17 INFO: 1 [logterm: 1, index: 3] sent MsgVote request to 3 at term 2
debug soup: 1 -> soup (to 2): MsgVote {Type:MsgVote To:2 From:1 Term:2 LogTerm:1 Index:3 Entries:[] Commit:0 Snapshot:{Data:[] Metadata:{ConfState:{Voters:[] Learners:[] VotersOutgoing:[] LearnersNext:[] AutoLeave:false} Index:0 Term:0}} Reject:false RejectHint:0 Context:[]}
debug soup: 1 -> soup (to 3): MsgVote {Type:MsgVote To:3 From:1 Term:2 LogTerm:1 Index:3 Entries:[] Commit:0 Snapshot:{Data:[] Metadata:{ConfState:{Voters:[] Learners:[] VotersOutgoing:[] LearnersNext:[] AutoLeave:false} Index:0 Term:0}} Reject:false RejectHint:0 Context:[]}
raft2021/05/07 15:46:17 INFO: 3 switched to configuration voters=(1 2 3)
raft2021/05/07 15:46:17 INFO: 3 switched to configuration voters=(1 2 3)
raft2021/05/07 15:46:17 INFO: 3 switched to configuration voters=(1 2 3)
----{Type:Send Message:{Type:RequestVoteReq Entries:[]} Sender:1 Recipient:2}
debug state: { atLeastOneLeader: true, logs: { 1: [], 2: [], 3: [] } }
----{Type:Receive Message:{Type:RequestVoteReq Entries:[]} Sender:1 Recipient:2}
debug state: { atLeastOneLeader: true, logs: { 1: [], 2: [], 3: [] } }
debug soup: soup (from 1) -> 2: MsgVote
----{Type:Send Message:{Type:RequestVoteRes Entries:[]} Sender:2 Recipient:1}
debug state: { atLeastOneLeader: true, logs: { 1: [], 2: [], 3: [] } }
raft2021/05/07 15:46:17 INFO: 2 [term: 1] received a MsgVote message with higher term from 1 [term: 2]
raft2021/05/07 15:46:17 INFO: 2 became follower at term 2
raft2021/05/07 15:46:17 INFO: 2 [logterm: 1, index: 3, vote: 0] cast MsgVote for 1 [logterm: 1, index: 3] at term 2
debug soup: 2 -> soup (to 1): MsgVoteResp {Type:MsgVoteResp To:1 From:2 Term:2 LogTerm:0 Index:0 Entries:[] Commit:0 Snapshot:{Data:[] Metadata:{ConfState:{Voters:[] Learners:[] VotersOutgoing:[] LearnersNext:[] AutoLeave:false} Index:0 Term:0}} Reject:false RejectHint:0 Context:[]}
----{Type:Receive Message:{Type:RequestVoteRes Entries:[]} Sender:2 Recipient:1}
debug state: { atLeastOneLeader: true, logs: { 1: [], 2: [], 3: [] } }
debug soup: soup (from 2) -> 1: MsgVoteResp
----{Type:BecomeLeader Message:{Type:RequestVoteReq Entries:[]} Sender:0 Recipient:1}
debug state: { atLeastOneLeader: true, logs: { 1: [], 2: [], 3: [] } }
raft2021/05/07 15:46:17 INFO: 1 received MsgVoteResp from 2 at term 2
raft2021/05/07 15:46:17 INFO: 1 has received 2 MsgVoteResp votes and 0 vote rejections
raft2021/05/07 15:46:17 INFO: 1 became leader at term 2
raft2021/05/07 15:46:17 INFO: raft.node: 1 elected leader 1 at term 2
debug soup: 1 -> soup (to 2): MsgApp {Type:MsgApp To:2 From:1 Term:2 LogTerm:1 Index:3 Entries:[{Term:2 Index:4 Type:EntryNormal Data:[]}] Commit:3 Snapshot:{Data:[] Metadata:{ConfState:{Voters:[] Learners:[] VotersOutgoing:[] LearnersNext:[] AutoLeave:false} Index:0 Term:0}} Reject:false RejectHint:0 Context:[]}
debug soup: 1 -> soup (to 3): MsgApp {Type:MsgApp To:3 From:1 Term:2 LogTerm:1 Index:3 Entries:[{Term:2 Index:4 Type:EntryNormal Data:[]}] Commit:3 Snapshot:{Data:[] Metadata:{ConfState:{Voters:[] Learners:[] VotersOutgoing:[] LearnersNext:[] AutoLeave:false} Index:0 Term:0}} Reject:false RejectHint:0 Context:[]}
----{Type:Timeout Message:{Type:RequestVoteReq Entries:[]} Sender:0 Recipient:2}
debug state: { atLeastOneLeader: true, logs: { 1: [{ term: 2, type: ValueEntry, value: 0 }], 2: [], 3: [] } }
raft2021/05/07 15:46:17 INFO: 2 is starting a new election at term 2
raft2021/05/07 15:46:17 INFO: 2 became candidate at term 3
raft2021/05/07 15:46:17 INFO: 2 received MsgVoteResp from 2 at term 3
raft2021/05/07 15:46:17 INFO: 2 [logterm: 1, index: 3] sent MsgVote request to 1 at term 3
raft2021/05/07 15:46:17 INFO: 2 [logterm: 1, index: 3] sent MsgVote request to 3 at term 3
debug soup: 2 -> soup (to 1): MsgVote {Type:MsgVote To:1 From:2 Term:3 LogTerm:1 Index:3 Entries:[] Commit:0 Snapshot:{Data:[] Metadata:{ConfState:{Voters:[] Learners:[] VotersOutgoing:[] LearnersNext:[] AutoLeave:false} Index:0 Term:0}} Reject:false RejectHint:0 Context:[]}
debug soup: 2 -> soup (to 3): MsgVote {Type:MsgVote To:3 From:2 Term:3 LogTerm:1 Index:3 Entries:[] Commit:0 Snapshot:{Data:[] Metadata:{ConfState:{Voters:[] Learners:[] VotersOutgoing:[] LearnersNext:[] AutoLeave:false} Index:0 Term:0}} Reject:false RejectHint:0 Context:[]}
----{Type:Send Message:{Type:RequestVoteReq Entries:[]} Sender:2 Recipient:3}
debug state: { atLeastOneLeader: true, logs: { 1: [{ term: 2, type: ValueEntry, value: 0 }], 2: [], 3: [] } }
----{Type:Receive Message:{Type:RequestVoteReq Entries:[]} Sender:2 Recipient:3}
debug state: { atLeastOneLeader: true, logs: { 1: [{ term: 2, type: ValueEntry, value: 0 }], 2: [], 3: [] } }
debug soup: soup (from 2) -> 3: MsgVote
----{Type:Send Message:{Type:RequestVoteRes Entries:[]} Sender:3 Recipient:2}
debug state: { atLeastOneLeader: true, logs: { 1: [{ term: 2, type: ValueEntry, value: 0 }], 2: [], 3: [] } }
raft2021/05/07 15:46:17 INFO: 3 [term: 1] received a MsgVote message with higher term from 2 [term: 3]
raft2021/05/07 15:46:17 INFO: 3 became follower at term 3
raft2021/05/07 15:46:17 INFO: 3 [logterm: 1, index: 3, vote: 0] cast MsgVote for 2 [logterm: 1, index: 3] at term 3
debug soup: 3 -> soup (to 2): MsgVoteResp {Type:MsgVoteResp To:2 From:3 Term:3 LogTerm:0 Index:0 Entries:[] Commit:0 Snapshot:{Data:[] Metadata:{ConfState:{Voters:[] Learners:[] VotersOutgoing:[] LearnersNext:[] AutoLeave:false} Index:0 Term:0}} Reject:false RejectHint:0 Context:[]}
----{Type:Receive Message:{Type:RequestVoteRes Entries:[]} Sender:3 Recipient:2}
debug state: { atLeastOneLeader: true, logs: { 1: [{ term: 2, type: ValueEntry, value: 0 }], 2: [], 3: [] } }
debug soup: soup (from 3) -> 2: MsgVoteResp
----{Type:BecomeLeader Message:{Type:RequestVoteReq Entries:[]} Sender:0 Recipient:2}
raft2021/05/07 15:46:17 INFO: 2 received MsgVoteResp from 3 at term 3
debug state: { atLeastOneLeader: true, logs: { 1: [{ term: 2, type: ValueEntry, value: 0 }], 2: [], 3: [] } }
raft2021/05/07 15:46:17 INFO: 2 has received 2 MsgVoteResp votes and 0 vote rejections
raft2021/05/07 15:46:17 INFO: 2 became leader at term 3
raft2021/05/07 15:46:17 INFO: raft.node: 2 elected leader 2 at term 3
debug soup: 2 -> soup (to 1): MsgApp {Type:MsgApp To:1 From:2 Term:3 LogTerm:1 Index:3 Entries:[{Term:3 Index:4 Type:EntryNormal Data:[]}] Commit:3 Snapshot:{Data:[] Metadata:{ConfState:{Voters:[] Learners:[] VotersOutgoing:[] LearnersNext:[] AutoLeave:false} Index:0 Term:0}} Reject:false RejectHint:0 Context:[]}
debug soup: 2 -> soup (to 3): MsgApp {Type:MsgApp To:3 From:2 Term:3 LogTerm:1 Index:3 Entries:[{Term:3 Index:4 Type:EntryNormal Data:[]}] Commit:3 Snapshot:{Data:[] Metadata:{ConfState:{Voters:[] Learners:[] VotersOutgoing:[] LearnersNext:[] AutoLeave:false} Index:0 Term:0}} Reject:false RejectHint:0 Context:[]}
----Finished
spec state: { atLeastOneLeader: true, logs: { 1: [{ term: 2, type: ValueEntry, value: 0 }], 2: [{ term: 3, type: ValueEntry, value: 0 }], 3: [] } }

impl state: { atLeastOneLeader: true, logs: { 1: [{ term: 2, type: ValueEntry, value: 0 }], 2: [{ term: 3, type: ValueEntry, value: 0 }], 3: [] } }
